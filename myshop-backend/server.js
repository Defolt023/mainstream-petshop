// server.js
require("dotenv").config();
const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");
const TelegramBot = require("node-telegram-bot-api");

const app = express();

// === –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏–∫–∏ (–≤–∞–∂–Ω–æ: –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–æ —Ä–æ—É—Ç–æ–≤)
app.use("/uploads", express.static("uploads"));

// === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS
app.use(cors({
  origin: "http://localhost:8080",
  credentials: true,
  exposedHeaders: ["Content-Type", "Authorization"]
}));

// === –ü–∞—Ä—Å–∏–Ω–≥ JSON
app.use(express.json());

// === Telegram –ë–æ—Ç
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

let bot;
if (TELEGRAM_BOT_TOKEN && TELEGRAM_CHAT_ID) {
  bot = new TelegramBot(TELEGRAM_BOT_TOKEN, { polling: true });
  console.log("‚úÖ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω");

  // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ /start
  bot.onText(/\/start/, (msg) => {
    bot.sendMessage(msg.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *–ú–µ–π–Ω—Å—Ç—Ä–∏–º*!\n–í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–∞—Ö.", {
      parse_mode: "Markdown"
    });
  });

  // –õ–æ–≥ –æ—à–∏–±–æ–∫
  bot.on("polling_error", (err) => {
    console.error("Telegram polling error:", err.message);
  });
} else {
  console.warn("‚ö†Ô∏è TELEGRAM_BOT_TOKEN –∏–ª–∏ CHAT_ID –Ω–µ –∑–∞–¥–∞–Ω—ã –≤ .env");
}

// === –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–æ–≤
try {
  const productRoutes = require("./routes/products");
  const authRoutes = require("./routes/auth");
  const cartRoutes = require("./routes/cart");
  const checkoutRoutes = require("./routes/checkout");
  const orderRoutes = require("./routes/order"); // ‚úÖ –¢–µ–ø–µ—Ä—å —Ç–æ—á–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã

  // –†–æ—É—Ç—ã API
  app.use("/api/products", productRoutes);
  app.use("/api/auth", authRoutes);
  app.use("/api/cart", cartRoutes);
  app.use("/api/checkout", checkoutRoutes);
  app.use("/api/orders", orderRoutes); // ‚úÖ –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–º–µ–Ω–Ω–æ —Ç–∞–∫–∏–º
  app.use("/api/auth", require("./routes/contact")); // –∏–ª–∏ —Ç–∞–∫: app.use("/api/contact", require("./routes/contact"));

  console.log("‚úÖ –í—Å–µ —Ä–æ—É—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã");

} catch (err) {
  console.error("‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Ä–æ—É—Ç–æ–≤:", err.message);
  process.exit(1);
}

// === MongoDB
mongoose.connect(process.env.MONGO_URI)
  .then(() => {
    console.log("‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞");

    // –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
    app.listen(process.env.PORT || 3000, () => {
      console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${process.env.PORT || 3000}`);
    });

  })
  .catch((err) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è MongoDB:", err.message);
    process.exit(1); // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–∏ –æ—à–∏–±–∫–µ –ë–î
  });